http://projects.noeinoi.com/storybook/Who am I ?我在新加坡 Shopmatic電商平台公司擔任一名 Sr. UI/UX Designer ，同時也負責視覺面的前端開發，協助公司導入並且開發設計系統。Why Design System ?一個產品平台，在經過一段時間的開發後，元件和元素會因為日積月累而變得愈來愈多元和複雜而變得難以維護，也會因此讓開發成本變得相對吃重。為了有效減少開發的時間成本，在產品開發/改版的前期，設計師和工程師可以一起討論如何導入設計系統的開發。這樣的一個設計系統和平面的Design Guide其實是不一樣的，現實的開發上，工程師並不會一一去清楚了解設計的細節，因此常常會發生設計和成品上的不一致。所以一個可以給工程師方便使用的設計系統，將可以更有效地減少設計師和工程師之間的溝通成本，在此同時，也可以幫助設計師的設計方向是一致而不會發散。What is Design System ?簡單來說，一個頁面的結構，來自於色系、文字、圖片和排版…等基礎元素所構成。就像樂高，它可以由許多不同顏色不同大小和不同形狀的積木，組成出多樣的產品出來。而設計系統最先要打造的，就是把所有會用到的基礎元素(顏色、文字…)設計規範出來。How to get start ?拎起褲管做吧!最基本的工具當然就是Sketch，因為Sketch相當適合用來設計模組化的元件。在開發的設計系統平台上我們選擇使用Storybook by React的前端框架來作為元件庫的開發維護及元件使用的文件撰寫。程式這一塊可以和工程師一起合作，或是自學程式也是相當有趣的。在設計系統的開發過程中，一定一定會碰到很多大大小小不同的問題，這中間勢必也會一直持續修改。所以在前期不用擔心如何做對，而是持續改善下去。從開始開發設計系統到現在，每天都還是一直持續更新和修正。Who will be the team members?最基本的團隊結構一定會有設計師和工程師，而負責開發設計系統的，比較理想的角色是對於畫面設計細節比較有經驗的前端工程師，或是對於前端有經驗的設計師。而在我們的專案裡，因為自已過去有些前端開發的經驗，所以在這個專案上，就協助開發視覺面向的元件。而比較程式端的，像是如何把設計系統導入舊專案並實作、如何建立自動化及串連資料等… 這些則和另一名前端工程師一起配合。而PM的角色則是協助規劃專案時間表及進度。最重要的還是公司願意投入資源來一起達成這個開發，我很幸運主管和老闆都同意讓我們做這件事 :)視覺的定義在設計系統中負責視覺打底的重要元素。Color顏色分為主色、副色、白色、黑色、中間色、系統色和漸層色。可以將主色和副色再拆出二個不同階級的亮色和暗色，而白色和黑色會再定義出不同透明度的階級，透明階級簡單從5% — 10% — 20% — 40% — 60%, 80% 到100%，在不同底色(亮/暗)區塊上很常會使用到。中間色可以取自黑色透明階級，中間色通常會是實色。系統色則是用來作為警告、成功、錯誤…等狀態的提示顏色。漸層色則可有可無，主要依照專案需求來定義。Font文字定義重點在於，不要毫無目的地定義出許多很接近而失去意義的文字大小。最重要的只需要定義出大標題、副標題、小標、內文和提示小字。設計師有時很常盲目地調整文字大小只為了符合當下視覺的需求，而忽略了這些文字定義是沒有目的和系統的。在設計的過程中，版面會在不同畫面而出現各種的排列組合，而這些組合都會依賴在一個規範底下，最基礎的規範像是間距、寬度和欄位配置等。規範的主要目的可以讓程式開發避免像是像是間距從10px、11px、13px…17px，這些意義不大的數值設定。Wrapper版面寬度的容器。Spacing物件之間的間距。過去的經驗，一個版面上會因為有不同的間距，而寫了該版面上獨立的css來符合配置。而現在的作法比較像是給版面不同高度的空容器，就像給予一塊透明的積木上讓物件之間產生間距。Grid版面欄位的設定與配置。這一塊的運用來自Ant-Design的Grid系統，Ant-Design在Grid上做了相當多便利的使用方法，像是可以在Row身上設定欄位之間的間距，或是設定物件垂直置中的方式，還有物件水平置中的方式…等，非常實用。參考文件: Ant Design Grid System專案中會有些元件是常常被重覆利用的，所以如果有一個整理這些元件的地方，是可以增加許多便利性的。Logo / Illustrations因為公司是電商服務整合平台，所以相對會有許多像是Marketplace、Social Media、Shipping、Payment…等相關的合作伙伴的Logo。所以我將Logo和插圖都納入這個設計系統之中，方便現在和未來開發時使用。Icon將Icon轉換成程式可以使用的IconFont，這個的好處在於可透過調整css來調整其Icon的大小或是顏色，我們專案是使用的技術是 SVG to webfont converter，原理大致上是先把Sketch上所有的Icon輸出為.svg的圖檔，再將.svg轉換為可以用的IconFont。參考文件: SVG to webfont converter for Grunt當你有了上面這些基礎設定都有之後，就可以著手打造各個元件了。而元件的使用文件會是在這一步中重要的一環，因為如果文件沒有寫完整，別人是無法用你的元件來做開發的，所以邊開發元件的同時，就順手把API和使用方法一起補在單元中。元件在不同的地方使用時，會有些型式的改變，所以要設想如何將這些元件設計出彈性和型式的轉變以滿足它在的不同地方上的變化。設計師需要了解，一個元件的構成都來自於基礎元素的構成，所以在設計時，不要因為為了一毫米的美感，而讓元件各自偏離一開始就設定好的設計規範。如果對於元件的設計有疑問時，也可以和工程師一起討論程式開發的邏輯和方向。在構成頁面之前，可以先了解有哪些常用的組合元件。像是下方的視覺中包含了插圖、標題內文和按鈕，而這樣的組合出現在許多的頁面中，所以就可以考慮將這樣組合開發為一個組合元件。當然在開發的同時也必須考慮它的型式變化和運用彈性。組合元件只在常常被重覆使用時才做開發，不然太多的組合元件反而會讓人感到困惑。當備好了所有的零件後，就可以將這些零件群拼凑成頁面了。而這也是最有趣的一步，因為你會開始發現有些元件在頁面上出現不同的問題，這時你就必須回去修正這些零件。開發設計系統可以讓我們更新頁面上的某元件的樣式時，只需要修改該元件，而不必去動到所有頁面上的元件。而頁面的構成也會變得像組積木一樣地簡單容易，也變得相當容易去作專案的維護。設計系統是設計師和工程師的合作橋梁。專案開發的效率有助於商業測試，商業的世界講求的不是精準，而是加速測試和隨時調整方向。設計師不需因為規範而覺得設計受到限制，產品的完美與否，這些都可以隨著時間而慢慢變得完整，當中設計趨勢也隨著時間也一直在變化，重點還是專注在於和連結真實世界的使用者體驗去做測試並適時地為產品做出最好的調整。這次的設計系統專案也是我的第一個相關專案，所以目前也都還在持續修正和進化中，如果有任何議題，歡迎與我討論 :)Storybook — UI DevelopmentThe UI Development Environment, You’ll ♥️ to useAnt-DesignA design system with values of Nature and Determinacy for better user experience of enterprise applicationsFrom a quick cheer to a standing ovation, clap to show how much you enjoyed this story.Sr. UI/UX Designer & FrontEnd Developer, noeinoi.com, @ShopmaticAAPD專注於分享數位產品設計的相關資訊，並且致力在平台上創造更多的交流與互動，我們關注UI設計、UX設計、設計師的個人成長、設計趨勢與產業動態等，希望透過這些知識的傳遞，能夠降低每位設計師成長的過程中所遇到的阻礙。歡迎來信投稿：aapdgo@gmail.com